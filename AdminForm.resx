<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>